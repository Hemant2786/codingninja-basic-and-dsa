import java.util.Queue;
import java.util.LinkedList;
import java.util.Scanner;

public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	
	
	
	//public static void printLevelWise(TreeNode<Integer> root){
		/* Your class should be named Solution 
 		 * Don't write main(). 
		 * Don't read input, it is passed as function argument. 
		 * Print output and don't return it. 
		 * Taking input is handled automatically. 
 		 */

 public static void printLevelWise(TreeNode<Integer> root){
    
     Queue<TreeNode<Integer>> queue=new LinkedList<>();
     Queue<TreeNode<Integer>> childqueue=new LinkedList<>();
     queue.add(root);
     
     while(!queue.isEmpty())
     {
         TreeNode<Integer> frontnode=queue.poll();
         System.out.print(frontnode.data+" ");
         
         for(int i=0;i<frontnode.children.size();i++)
         {
             childqueue.add(frontnode.children.get(i));
         }
         if(queue.isEmpty())
         {
             queue=childqueue;
             childqueue=new LinkedList<>();
             System.out.println();
         }
     }        
 }
}
